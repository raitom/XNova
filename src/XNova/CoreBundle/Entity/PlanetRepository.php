<?php

namespace XNova\CoreBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PlanetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlanetRepository extends EntityRepository
{
    /**
     * Donne le nombre de planètes dans le système d'une galaxie
     * 
     * @param int $system système
     * @param int $galaxy galaxie
     */
    public function planetsInSystem($system, $galaxy)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('COUNT(p.id)')
            ->from($this->_entityName, "p")
            ->where('p.system = :system')
                ->setParameter("system", $system)
            ->andWhere('p.galaxy = :galaxy')
                ->setParameter("galaxy", $galaxy);
        return $qb->getQuery()->getSingleScalarResult();
    }
    
    /**
     * Vérifie si l'emplacement d'une planète est libre 
     * 
     * @param int $system système
     * @param int $galaxy galaxie
     * @param int $planet planète
     */
    public function freePlanet($planet, $system, $galaxy)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('COUNT(p.id)')
            ->from($this->_entityName, "p")
            ->where('p.system = :system')
                ->setParameter("system", $system)
            ->andWhere('p.galaxy = :galaxy')
                ->setParameter("galaxy", $galaxy)
            ->andWhere('p.planet = :planet')
                ->setParameter("planet", $planet);
        $result = $qb->getQuery()->getSingleScalarResult();
        if($result > 0)
            return FALSE;
        else
            return TRUE;
    }
    
    /**
     * Met à jour les ressources d'une planète
     * 
     * @param type $id id de la planète
     * @param type $data array contenant les ressources
     */
    public function updateRessources($id, $data)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->update($this->_entityName, 'p')
            ->set('p.metal', $data['metal'])
            ->set('p.diamond', $data['diamond'])
            ->set('p.gold', $data['gold'])
            ->set('p.antimatter', $data['antimatter'])
            ->set('p.energy', $data['energy'])
            ->set('p.lastUpdate', $data['lastUpdate'])
            ->where('p.id = :id')
                ->setParameter('id', $id);
        $qb->getQuery()->execute();
    }
    
}